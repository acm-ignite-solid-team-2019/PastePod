{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ldflexComunica = _interopRequireDefault(require(\"ldflex-comunica\"));\n\nvar _solidAuthClient = _interopRequireDefault(require(\"solid-auth-client\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * An extension of ComunicaEngine that delegates\n * SPARQL UPDATE queries directly to the documents\n * using authenticated request.\n */\n\n\nvar ComunicaUpdateEngine =\n/*#__PURE__*/\nfunction (_ldflexComunica$defau) {\n  _inherits(ComunicaUpdateEngine, _ldflexComunica$defau);\n\n  function ComunicaUpdateEngine() {\n    _classCallCheck(this, ComunicaUpdateEngine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ComunicaUpdateEngine).apply(this, arguments));\n  }\n\n  _createClass(ComunicaUpdateEngine, [{\n    key: \"executeUpdate\",\n\n    /**\n     * Delegates SPARQL UPDATE queries directly to the document.\n     */\n    value: function executeUpdate(sparql) {\n      var _this = this;\n\n      if (this._source) throw new Error('Updates on non-subject sources not yet supported.');\n      var executed = false;\n\n      var next =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var document, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (executed) {\n                    _context.next = 15;\n                    break;\n                  }\n\n                  executed = true; // Send authenticated PATCH request to the document\n\n                  _context.t0 = _this;\n                  _context.next = 5;\n                  return _this._subject;\n\n                case 5:\n                  _context.t1 = _context.sent;\n                  document = _context.t0.getDocument.call(_context.t0, _context.t1);\n                  _context.next = 9;\n                  return _solidAuthClient.default.fetch(document, {\n                    method: 'PATCH',\n                    headers: {\n                      'Content-Type': 'application/sparql-update'\n                    },\n                    body: sparql\n                  });\n\n                case 9:\n                  response = _context.sent;\n\n                  if (response.ok) {\n                    _context.next = 12;\n                    break;\n                  }\n\n                  throw new Error(\"Update query failed (\".concat(response.status, \"): \").concat(response.statusText));\n\n                case 12:\n                  _context.next = 14;\n                  return _this._engine.invalidateHttpCache(document);\n\n                case 14:\n                  return _context.abrupt(\"return\", {\n                    value: {\n                      size: 1,\n                      values: function values() {\n                        return {\n                          next: function next() {\n                            return {\n                              value: {\n                                ok: true\n                              }\n                            };\n                          }\n                        };\n                      }\n                    }\n                  });\n\n                case 15:\n                  return _context.abrupt(\"return\", {\n                    done: true\n                  });\n\n                case 16:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function next() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      return _defineProperty({\n        next: next\n      }, Symbol.asyncIterator, function () {\n        return this;\n      });\n    }\n  }]);\n\n  return ComunicaUpdateEngine;\n}(_ldflexComunica.default);\n\nexports.default = ComunicaUpdateEngine;","map":null,"metadata":{},"sourceType":"script"}