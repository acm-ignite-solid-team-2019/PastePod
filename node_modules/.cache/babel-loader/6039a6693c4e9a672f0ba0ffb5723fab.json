{"ast":null,"code":"var _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar AsyncIterator = require('asynciterator');\n\nvar MultiTransformIterator = AsyncIterator.MultiTransformIterator;\nvar SimpleTransformIterator = AsyncIterator.SimpleTransformIterator; // https://en.wikipedia.org/wiki/Nested_loop_join\n\nvar NestedLoopJoin =\n/*#__PURE__*/\nfunction (_MultiTransformIterat) {\n  \"use strict\";\n\n  _inherits(NestedLoopJoin, _MultiTransformIterat);\n\n  function NestedLoopJoin(left, right, funJoin) {\n    var _this;\n\n    _classCallCheck(this, NestedLoopJoin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NestedLoopJoin).call(this, left));\n    _this.right = right;\n    _this.funJoin = funJoin; // function that joins 2 elements or returns null if join is not possible\n\n    _this.on('end', function () {\n      return _this.right.close();\n    });\n\n    return _this;\n  }\n\n  _createClass(NestedLoopJoin, [{\n    key: \"close\",\n    value: function close() {\n      _get(_getPrototypeOf(NestedLoopJoin.prototype), \"close\", this).call(this);\n\n      this.right.close();\n    }\n  }, {\n    key: \"_createTransformer\",\n    value: function _createTransformer(leftItem) {\n      var _this2 = this;\n\n      return new SimpleTransformIterator(this.right.clone(), {\n        transform: function transform(rightItem, done) {\n          var result = _this2.funJoin(leftItem, rightItem);\n\n          if (result !== null) _this2._push(result);\n          done();\n        }\n      });\n    }\n  }]);\n\n  return NestedLoopJoin;\n}(MultiTransformIterator);\n\nmodule.exports = NestedLoopJoin;","map":null,"metadata":{},"sourceType":"script"}