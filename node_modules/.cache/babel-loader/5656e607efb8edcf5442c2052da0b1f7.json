{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@comunica/core\");\n/**\n * A comunica mediator that takes the union of all actor results.\n *\n * The actors that are registered first will have priority on setting overlapping fields.\n */\n\n\nvar MediatorCombineUnion =\n/*#__PURE__*/\nfunction (_core_1$Mediator) {\n  _inherits(MediatorCombineUnion, _core_1$Mediator);\n\n  function MediatorCombineUnion(args) {\n    var _this;\n\n    _classCallCheck(this, MediatorCombineUnion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MediatorCombineUnion).call(this, args));\n    _this.combiner = _this.createCombiner();\n    return _this;\n  }\n\n  _createClass(MediatorCombineUnion, [{\n    key: \"mediate\",\n    value: function () {\n      var _mediate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        var testResults, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                testResults = this.publish(action); // Delegate test errors.\n\n                _context.next = 3;\n                return Promise.all(require('lodash.map')(testResults, 'reply'));\n\n              case 3:\n                _context.next = 5;\n                return Promise.all(testResults.map(function (result) {\n                  return result.actor.runObservable(action);\n                }));\n\n              case 5:\n                results = _context.sent;\n                return _context.abrupt(\"return\", this.combiner(results));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function mediate(_x) {\n        return _mediate.apply(this, arguments);\n      }\n\n      return mediate;\n    }()\n  }, {\n    key: \"mediateWith\",\n    value: function mediateWith(action, testResults) {\n      throw new Error(\"Method not supported.\");\n    }\n  }, {\n    key: \"createCombiner\",\n    value: function createCombiner() {\n      var _this2 = this;\n\n      return function (results) {\n        var data = {};\n        data[_this2.field] = require('lodash.defaults').apply({}, [{}].concat(require('lodash.map')(results, _this2.field)));\n        return data;\n      };\n    }\n  }]);\n\n  return MediatorCombineUnion;\n}(core_1.Mediator);\n\nexports.MediatorCombineUnion = MediatorCombineUnion;","map":null,"metadata":{},"sourceType":"script"}