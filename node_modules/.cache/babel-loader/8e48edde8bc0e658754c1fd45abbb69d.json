{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_rdf_resolve_quad_pattern_1 = require(\"@comunica/bus-rdf-resolve-quad-pattern\");\n\nvar FederatedQuadSource_1 = require(\"./FederatedQuadSource\");\n/**\n * A comunica Federated RDF Resolve Quad Pattern Actor.\n */\n\n\nvar ActorRdfResolveQuadPatternFederated =\n/*#__PURE__*/\nfunction (_bus_rdf_resolve_quad) {\n  _inherits(ActorRdfResolveQuadPatternFederated, _bus_rdf_resolve_quad);\n\n  function ActorRdfResolveQuadPatternFederated(args) {\n    var _this;\n\n    _classCallCheck(this, ActorRdfResolveQuadPatternFederated);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActorRdfResolveQuadPatternFederated).call(this, args));\n    _this.emptyPatterns = new Map();\n    return _this;\n  }\n\n  _createClass(ActorRdfResolveQuadPatternFederated, [{\n    key: \"test\",\n    value: function () {\n      var _test = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        var sources;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sources = this.getContextSources(action.context);\n\n                if (sources) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error('Actor ' + this.name + ' can only resolve quad pattern queries against a sources array.');\n\n              case 3:\n                return _context.abrupt(\"return\", true);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function test(_x) {\n        return _test.apply(this, arguments);\n      }\n\n      return test;\n    }()\n  }, {\n    key: \"getSource\",\n    value: function () {\n      var _getSource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(context) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new FederatedQuadSource_1.FederatedQuadSource(this.mediatorResolveQuadPattern, context, this.emptyPatterns, this.skipEmptyPatterns));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getSource(_x2) {\n        return _getSource.apply(this, arguments);\n      }\n\n      return getSource;\n    }()\n  }, {\n    key: \"getOutput\",\n    value: function () {\n      var _getOutput = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(source, pattern, context) {\n        var output;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _get(_getPrototypeOf(ActorRdfResolveQuadPatternFederated.prototype), \"getOutput\", this).call(this, source, pattern, context);\n\n              case 2:\n                output = _context3.sent;\n\n                output.metadata = function () {\n                  return new Promise(function (resolve, reject) {\n                    output.data.on('error', reject);\n                    output.data.on('end', function () {\n                      return reject(new Error('No metadata was found'));\n                    });\n                    output.data.on('metadata', function (metadata) {\n                      resolve(metadata);\n                    });\n                  });\n                };\n\n                return _context3.abrupt(\"return\", output);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getOutput(_x3, _x4, _x5) {\n        return _getOutput.apply(this, arguments);\n      }\n\n      return getOutput;\n    }()\n  }]);\n\n  return ActorRdfResolveQuadPatternFederated;\n}(bus_rdf_resolve_quad_pattern_1.ActorRdfResolveQuadPatternSource);\n\nexports.ActorRdfResolveQuadPatternFederated = ActorRdfResolveQuadPatternFederated;","map":null,"metadata":{},"sourceType":"script"}