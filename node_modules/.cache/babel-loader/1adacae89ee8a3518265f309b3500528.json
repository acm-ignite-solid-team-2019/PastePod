{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actor_abstract_bindings_hash_1 = require(\"@comunica/actor-abstract-bindings-hash\");\n\nvar bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n\nvar asynciterator_promiseproxy_1 = require(\"asynciterator-promiseproxy\");\n/**\n * A comunica Minus Query Operation Actor.\n */\n\n\nvar ActorQueryOperationMinus =\n/*#__PURE__*/\nfunction (_actor_abstract_bindi) {\n  _inherits(ActorQueryOperationMinus, _actor_abstract_bindi);\n\n  function ActorQueryOperationMinus(args) {\n    _classCallCheck(this, ActorQueryOperationMinus);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorQueryOperationMinus).call(this, args, 'minus'));\n  }\n\n  _createClass(ActorQueryOperationMinus, [{\n    key: \"newHashFilter\",\n    value: function newHashFilter(hashAlgorithm, digestAlgorithm, commons, hashes) {\n      return function (bindings) {\n        var hash = ActorQueryOperationMinus.hash(hashAlgorithm, digestAlgorithm, bindings.filter(function (v, k) {\n          return commons[k];\n        }));\n        return !(hash in hashes);\n      };\n    }\n  }, {\n    key: \"runOperation\",\n    value: function () {\n      var _runOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(pattern, context) {\n        var _this = this;\n\n        var buffer, output, commons, hashes, bindingsStream;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = bus_query_operation_1.ActorQueryOperation;\n                _context2.next = 3;\n                return this.mediatorQueryOperation.mediate({\n                  operation: pattern.right,\n                  context: context\n                });\n\n              case 3:\n                _context2.t1 = _context2.sent;\n                buffer = _context2.t0.getSafeBindings.call(_context2.t0, _context2.t1);\n                _context2.t2 = bus_query_operation_1.ActorQueryOperation;\n                _context2.next = 8;\n                return this.mediatorQueryOperation.mediate({\n                  operation: pattern.left,\n                  context: context\n                });\n\n              case 8:\n                _context2.t3 = _context2.sent;\n                output = _context2.t2.getSafeBindings.call(_context2.t2, _context2.t3);\n                commons = this.getCommonVariables(buffer.variables, output.variables);\n\n                if (!(Object.keys(commons).length !== 0)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                hashes = {};\n                /**\n                 * To assure we've filtered all B (`buffer`) values from A (`output`) we wait until we've fetched all values of B.\n                 * Then we save these triples in a hashmap `hashes` and use the map to filter our A-stream.\n                 */\n\n                bindingsStream = new asynciterator_promiseproxy_1.PromiseProxyIterator(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return new Promise(function (resolve) {\n                            buffer.bindingsStream.on('data', function (data) {\n                              var hash = ActorQueryOperationMinus.hash(_this.hashAlgorithm, _this.digestAlgorithm, data.filter(function (v, k) {\n                                return commons[k];\n                              }));\n                              hashes[hash] = true;\n                            });\n                            buffer.bindingsStream.on('end', function () {\n                              resolve();\n                            });\n                          });\n\n                        case 2:\n                          return _context.abrupt(\"return\", output.bindingsStream.filter(_this.newHashFilter(_this.hashAlgorithm, _this.digestAlgorithm, commons, hashes)));\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, this);\n                })));\n                return _context2.abrupt(\"return\", {\n                  type: 'bindings',\n                  bindingsStream: bindingsStream,\n                  variables: output.variables,\n                  metadata: output.metadata\n                });\n\n              case 17:\n                return _context2.abrupt(\"return\", output);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function runOperation(_x, _x2) {\n        return _runOperation.apply(this, arguments);\n      }\n\n      return runOperation;\n    }()\n    /**\n     * This function puts all common values between 2 arrays in a map with `value` : true\n     */\n\n  }, {\n    key: \"getCommonVariables\",\n    value: function getCommonVariables(array1, array2) {\n      return array1.filter(function (n) {\n        return -1 !== array2.indexOf(n);\n      }).reduce(function (m, key) {\n        m[key] = true;\n        return m;\n      }, {});\n    }\n  }]);\n\n  return ActorQueryOperationMinus;\n}(actor_abstract_bindings_hash_1.AbstractFilterHash);\n\nexports.ActorQueryOperationMinus = ActorQueryOperationMinus;","map":null,"metadata":{},"sourceType":"script"}