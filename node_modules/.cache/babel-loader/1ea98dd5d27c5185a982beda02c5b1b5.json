{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actor_abstract_bindings_hash_1 = require(\"@comunica/actor-abstract-bindings-hash\");\n/**\n * A comunica Distinct Hash Query Operation Actor.\n */\n\n\nvar ActorQueryOperationDistinctHash =\n/*#__PURE__*/\nfunction (_actor_abstract_bindi) {\n  _inherits(ActorQueryOperationDistinctHash, _actor_abstract_bindi);\n\n  function ActorQueryOperationDistinctHash(args) {\n    _classCallCheck(this, ActorQueryOperationDistinctHash);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorQueryOperationDistinctHash).call(this, args, 'distinct'));\n  }\n  /**\n   * Create a new distinct filter function for the given hash algorithm and digest algorithm.\n   * This will maintain an internal hash datastructure so that every bindings object only returns true once.\n   * @param {string} hashAlgorithm A hash algorithm.\n   * @param {string} digestAlgorithm A digest algorithm.\n   * @return {(bindings: Bindings) => boolean} A distinct filter for bindings.\n   */\n\n\n  _createClass(ActorQueryOperationDistinctHash, [{\n    key: \"newHashFilter\",\n    value: function newHashFilter(hashAlgorithm, digestAlgorithm) {\n      var hashes = {};\n      return function (bindings) {\n        var hash = ActorQueryOperationDistinctHash.hash(hashAlgorithm, digestAlgorithm, bindings);\n        return !(hash in hashes) && (hashes[hash] = true);\n      };\n    }\n  }]);\n\n  return ActorQueryOperationDistinctHash;\n}(actor_abstract_bindings_hash_1.AbstractBindingHash);\n\nexports.ActorQueryOperationDistinctHash = ActorQueryOperationDistinctHash;","map":null,"metadata":{},"sourceType":"script"}