{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ActorAbstractMediaTyped_1 = require(\"./ActorAbstractMediaTyped\");\n\nvar ActorAbstractMediaTypedFixed =\n/*#__PURE__*/\nfunction (_ActorAbstractMediaTy) {\n  _inherits(ActorAbstractMediaTypedFixed, _ActorAbstractMediaTy);\n\n  function ActorAbstractMediaTypedFixed(args) {\n    var _this;\n\n    _classCallCheck(this, ActorAbstractMediaTypedFixed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActorAbstractMediaTypedFixed).call(this, args));\n    var scale = _this.priorityScale || _this.priorityScale === 0 ? _this.priorityScale : 1;\n    _this.mediaTypes = require('lodash.mapvalues')(_this.mediaTypes, function (priority) {\n      return priority * scale;\n    });\n    _this.mediaTypes = Object.freeze(_this.mediaTypes);\n    return _this;\n  }\n\n  _createClass(ActorAbstractMediaTypedFixed, [{\n    key: \"testHandle\",\n    value: function () {\n      var _testHandle = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action, mediaType, context) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (mediaType in this.mediaTypes) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Unrecognized media type: ' + mediaType);\n\n              case 2:\n                _context.next = 4;\n                return this.testHandleChecked(action, context);\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function testHandle(_x, _x2, _x3) {\n        return _testHandle.apply(this, arguments);\n      }\n\n      return testHandle;\n    }()\n  }, {\n    key: \"testMediaType\",\n    value: function () {\n      var _testMediaType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(context) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", true);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function testMediaType(_x4) {\n        return _testMediaType.apply(this, arguments);\n      }\n\n      return testMediaType;\n    }()\n  }, {\n    key: \"getMediaTypes\",\n    value: function () {\n      var _getMediaTypes = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(context) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.mediaTypes);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getMediaTypes(_x5) {\n        return _getMediaTypes.apply(this, arguments);\n      }\n\n      return getMediaTypes;\n    }()\n  }]);\n\n  return ActorAbstractMediaTypedFixed;\n}(ActorAbstractMediaTyped_1.ActorAbstractMediaTyped);\n\nexports.ActorAbstractMediaTypedFixed = ActorAbstractMediaTypedFixed;","map":null,"metadata":{},"sourceType":"script"}