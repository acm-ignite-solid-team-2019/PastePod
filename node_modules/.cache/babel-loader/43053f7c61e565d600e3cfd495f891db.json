{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n\nvar bus_rdf_resolve_quad_pattern_1 = require(\"@comunica/bus-rdf-resolve-quad-pattern\");\n\nvar core_1 = require(\"@comunica/core\");\n\nvar asynciterator_1 = require(\"asynciterator\");\n\nvar asyncreiterable_1 = require(\"asyncreiterable\");\n/**\n * A comunica Service Query Operation Actor.\n * It unwraps the SERVICE operation and executes it on the given source.\n */\n\n\nvar ActorQueryOperationService =\n/*#__PURE__*/\nfunction (_bus_query_operation_) {\n  _inherits(ActorQueryOperationService, _bus_query_operation_);\n\n  function ActorQueryOperationService(args) {\n    _classCallCheck(this, ActorQueryOperationService);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorQueryOperationService).call(this, args, 'service'));\n  }\n\n  _createClass(ActorQueryOperationService, [{\n    key: \"testOperation\",\n    value: function () {\n      var _testOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pattern, context) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(pattern.name.termType !== 'NamedNode')) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error(\"\".concat(this.name, \" can only query services by IRI, while a \").concat(pattern.name.termType, \" was given.\"));\n\n              case 2:\n                return _context.abrupt(\"return\", true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function testOperation(_x, _x2) {\n        return _testOperation.apply(this, arguments);\n      }\n\n      return testOperation;\n    }()\n  }, {\n    key: \"runOperation\",\n    value: function () {\n      var _runOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(pattern, context) {\n        var endpoint, subContext, sourceType, output;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = pattern.name.value; // Adjust our context to only have the endpoint as source\n\n                context = context || core_1.ActionContext({});\n                subContext = context.delete(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCE).delete(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCES);\n\n                if (!this.forceSparqlEndpoint) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.t0 = 'sparql';\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return this.mediatorRdfSourceIdentifier.mediate({\n                  sourceValue: endpoint,\n                  context: subContext\n                });\n\n              case 9:\n                _context2.t0 = _context2.sent.sourceType;\n\n              case 10:\n                sourceType = _context2.t0;\n                subContext = subContext.set(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCES, asyncreiterable_1.AsyncReiterableArray.fromFixedData([{\n                  type: sourceType,\n                  value: endpoint\n                }])); // Query the source\n\n                _context2.prev = 12;\n                _context2.t1 = bus_query_operation_1.ActorQueryOperation;\n                _context2.next = 16;\n                return this.mediatorQueryOperation.mediate({\n                  operation: pattern.input,\n                  context: subContext\n                });\n\n              case 16:\n                _context2.t2 = _context2.sent;\n                output = _context2.t1.getSafeBindings.call(_context2.t1, _context2.t2);\n                _context2.next = 27;\n                break;\n\n              case 20:\n                _context2.prev = 20;\n                _context2.t3 = _context2[\"catch\"](12);\n\n                if (!pattern.silent) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                // Emit a single empty binding\n                output = {\n                  bindingsStream: new asynciterator_1.SingletonIterator(bus_query_operation_1.Bindings({})),\n                  type: 'bindings',\n                  variables: []\n                };\n                _context2.next = 27;\n                break;\n\n              case 26:\n                throw _context2.t3;\n\n              case 27:\n                return _context2.abrupt(\"return\", output);\n\n              case 28:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[12, 20]]);\n      }));\n\n      function runOperation(_x3, _x4) {\n        return _runOperation.apply(this, arguments);\n      }\n\n      return runOperation;\n    }()\n  }]);\n\n  return ActorQueryOperationService;\n}(bus_query_operation_1.ActorQueryOperationTypedMediated);\n\nexports.ActorQueryOperationService = ActorQueryOperationService;","map":null,"metadata":{},"sourceType":"script"}