{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_rdf_dereference_paged_1 = require(\"@comunica/bus-rdf-dereference-paged\");\n\nvar LRU = require(\"lru-cache\");\n\nvar MediatedPagedAsyncRdfIterator_1 = require(\"./MediatedPagedAsyncRdfIterator\");\n/**\n * An RDF Dereference Paged Actor that will lazily follow 'next' links as defined from the extracted metadata.\n */\n\n\nvar ActorRdfDereferencePagedNext =\n/*#__PURE__*/\nfunction (_bus_rdf_dereference_) {\n  _inherits(ActorRdfDereferencePagedNext, _bus_rdf_dereference_);\n\n  function ActorRdfDereferencePagedNext(args) {\n    var _this;\n\n    _classCallCheck(this, ActorRdfDereferencePagedNext);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActorRdfDereferencePagedNext).call(this, args));\n    _this.cache = _this.cacheSize ? new LRU({\n      max: _this.cacheSize\n    }) : null;\n\n    if (_this.cache) {\n      _this.httpInvalidator.addInvalidateListener(function (_ref) {\n        var pageUrl = _ref.pageUrl;\n        return pageUrl ? _this.cache.del(pageUrl) : _this.cache.reset();\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(ActorRdfDereferencePagedNext, [{\n    key: \"test\",\n    value: function test(action) {\n      // Try to determine an actor in the RDF dereference bus to see if we can handle the given URL.\n      return this.mediatorRdfDereference.mediateActor({\n        context: action.context,\n        url: action.url\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run(action) {\n      if (this.cacheSize && this.cache.has(action.url)) {\n        return this.cloneOutput(this.cache.get(action.url));\n      }\n\n      var output = this.runAsync(action);\n\n      if (this.cacheSize) {\n        this.cache.set(action.url, output);\n        return this.cloneOutput(output);\n      } else {\n        return output;\n      }\n    }\n    /**\n     * Make a copy of the given output promise.\n     * @param {Promise<IActorRdfDereferencePagedOutput>} outputPromise An output promise.\n     * @return {Promise<IActorRdfDereferencePagedOutput>} A cloned output promise.\n     */\n\n  }, {\n    key: \"cloneOutput\",\n    value: function () {\n      var _cloneOutput = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(outputPromise) {\n        var output;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return outputPromise;\n\n              case 2:\n                output = _context.sent;\n                return _context.abrupt(\"return\", {\n                  data: output.data.clone(),\n                  firstPageMetadata: function firstPageMetadata() {\n                    return output.firstPageMetadata().then(function (metadata) {\n                      return Object.assign({}, metadata);\n                    });\n                  },\n                  firstPageUrl: output.firstPageUrl,\n                  triples: output.triples\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cloneOutput(_x) {\n        return _cloneOutput.apply(this, arguments);\n      }\n\n      return cloneOutput;\n    }()\n    /**\n     * Actual logic to produce the paged output.\n     * @param {IActionRdfDereferencePaged} action An action.\n     * @return {Promise<IActorRdfDereferencePagedOutput>} The output.\n     */\n\n  }, {\n    key: \"runAsync\",\n    value: function () {\n      var _runAsync = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(action) {\n        var _this2 = this;\n\n        var firstPage, firstPageUrl, firstPageMetaSplit, materializedFirstPageMetadata, firstPageMetadata, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.mediatorRdfDereference.mediate(action);\n\n              case 2:\n                firstPage = _context2.sent;\n                firstPageUrl = firstPage.pageUrl;\n                _context2.next = 6;\n                return this.mediatorMetadata.mediate({\n                  context: action.context,\n                  pageUrl: firstPageUrl,\n                  quads: firstPage.quads,\n                  triples: firstPage.triples\n                });\n\n              case 6:\n                firstPageMetaSplit = _context2.sent;\n                materializedFirstPageMetadata = null;\n\n                firstPageMetadata = function firstPageMetadata() {\n                  return materializedFirstPageMetadata || (materializedFirstPageMetadata = _this2.mediatorMetadataExtract.mediate({\n                    context: action.context,\n                    pageUrl: firstPageUrl,\n                    metadata: firstPageMetaSplit.metadata\n                  }).then(function (output) {\n                    return output.metadata;\n                  }));\n                };\n\n                data = new MediatedPagedAsyncRdfIterator_1.MediatedPagedAsyncRdfIterator(firstPageUrl, firstPageMetaSplit.data, firstPageMetadata, this.mediatorRdfDereference, this.mediatorMetadata, this.mediatorMetadataExtract, action.context);\n                return _context2.abrupt(\"return\", {\n                  firstPageUrl: firstPageUrl,\n                  data: data,\n                  firstPageMetadata: firstPageMetadata,\n                  triples: firstPage.triples\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function runAsync(_x2) {\n        return _runAsync.apply(this, arguments);\n      }\n\n      return runAsync;\n    }()\n  }]);\n\n  return ActorRdfDereferencePagedNext;\n}(bus_rdf_dereference_paged_1.ActorRdfDereferencePaged);\n\nexports.ActorRdfDereferencePagedNext = ActorRdfDereferencePagedNext;","map":null,"metadata":{},"sourceType":"script"}