{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A logger accepts messages from different levels\n * and emits them in a certain way.\n */\n\nvar Logger =\n/*#__PURE__*/\nfunction () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n\n  _createClass(Logger, null, [{\n    key: \"getLevelOrdinal\",\n\n    /**\n     * Convert a string-based logging level to a numerical logging level.\n     * @param level A string-based logging level\n     * @return The numerical logging level, or undefined.\n     */\n    value: function getLevelOrdinal(level) {\n      return Logger.LEVELS[level];\n    }\n  }]);\n\n  return Logger;\n}();\n/**\n * All available logging levels.\n * @type {{trace: number; debug: number; info: number; warn: number; error: number; fatal: number}}\n */\n// tslint:disable:object-literal-sort-keys\n\n\nLogger.LEVELS = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 3,\n  error: 4,\n  fatal: 5\n};\nexports.Logger = Logger;\n/**\n * @type {string} Context entry for a logger instance.\n * @value {Logger} A logger.\n */\n\nexports.KEY_CONTEXT_LOG = '@comunica/core:log';","map":null,"metadata":{},"sourceType":"script"}