{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ldflex = require(\"ldflex\");\n\nfunction _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol === \"function\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n/**\n * node-solid-server deviates from the SPARQL UPDATE spec:\n * whereas the spec asks for DELETE on non-existing triples to silently succeed,\n * node-solid-server will only DELETE if exactly one triple matches.\n *\n * This delete handler works around that limitation\n * by first requesting all existing values for a path,\n * and then only issuing DELETE statements for those that exist.\n */\n\n\nvar SolidDeleteFunctionHandler =\n/*#__PURE__*/\nfunction (_ldflex$DeleteFunctio) {\n  _inherits(SolidDeleteFunctionHandler, _ldflex$DeleteFunctio);\n\n  function SolidDeleteFunctionHandler() {\n    _classCallCheck(this, SolidDeleteFunctionHandler);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SolidDeleteFunctionHandler).apply(this, arguments));\n  }\n\n  _createClass(SolidDeleteFunctionHandler, [{\n    key: \"extractObjects\",\n    value: function () {\n      var _extractObjects = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pathData, path, args) {\n        var objects, existing, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, term;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _get(_getPrototypeOf(SolidDeleteFunctionHandler.prototype), \"extractObjects\", this).call(this, pathData, path, args);\n\n              case 2:\n                objects = _context.sent;\n                // Obtain all values that currently exist\n                existing = [];\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 6;\n                _iterator = _asyncIterator(path);\n\n              case 8:\n                _context.next = 10;\n                return _iterator.next();\n\n              case 10:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 14;\n                return _step.value;\n\n              case 14:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 21;\n                  break;\n                }\n\n                term = _value;\n                if (term.termType !== 'BlankNode') existing.push(term);\n\n              case 18:\n                _iteratorNormalCompletion = true;\n                _context.next = 8;\n                break;\n\n              case 21:\n                _context.next = 27;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](6);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 27:\n                _context.prev = 27;\n                _context.prev = 28;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 32;\n                  break;\n                }\n\n                _context.next = 32;\n                return _iterator.return();\n\n              case 32:\n                _context.prev = 32;\n\n                if (!_didIteratorError) {\n                  _context.next = 35;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 35:\n                return _context.finish(32);\n\n              case 36:\n                return _context.finish(27);\n\n              case 37:\n                return _context.abrupt(\"return\", !objects ? existing : existing.filter(function (e) {\n                  return objects.some(function (o) {\n                    return o.equals(e);\n                  });\n                }));\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 23, 27, 37], [28,, 32, 36]]);\n      }));\n\n      function extractObjects(_x, _x2, _x3) {\n        return _extractObjects.apply(this, arguments);\n      }\n\n      return extractObjects;\n    }()\n  }]);\n\n  return SolidDeleteFunctionHandler;\n}(_ldflex.DeleteFunctionHandler);\n\nexports.default = SolidDeleteFunctionHandler;","map":null,"metadata":{},"sourceType":"script"}