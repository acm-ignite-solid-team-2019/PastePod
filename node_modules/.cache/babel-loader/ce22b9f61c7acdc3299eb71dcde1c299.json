{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar asynciterator_1 = require(\"asynciterator\");\n/**\n * A {@link TransformIterator} that allows the source to be set through a lazy Promise.\n * The provided getter will only be called from the moment that this proxy iterator is being read.\n *\n * Rejections of the promise will be emitted as error event.\n */\n\n\nvar PromiseProxyIterator =\n/*#__PURE__*/\nfunction (_asynciterator_1$Tran) {\n  _inherits(PromiseProxyIterator, _asynciterator_1$Tran);\n\n  function PromiseProxyIterator(sourceGetter, options) {\n    var _this;\n\n    _classCallCheck(this, PromiseProxyIterator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PromiseProxyIterator).call(this, options || {\n      autoStart: false\n    }));\n    _this.sourceGetter = sourceGetter;\n    return _this;\n  }\n\n  _createClass(PromiseProxyIterator, [{\n    key: \"_read\",\n    value: function _read(count, done) {\n      var _this2 = this;\n\n      if (!this.source) {\n        this.sourceGetter().then(function (source) {\n          _this2.source = source;\n\n          _get(_getPrototypeOf(PromiseProxyIterator.prototype), \"_read\", _this2).call(_this2, count, done);\n        }).catch(function (error) {\n          return _this2.emit('error', error);\n        });\n      } else {\n        _get(_getPrototypeOf(PromiseProxyIterator.prototype), \"_read\", this).call(this, count, done);\n      }\n    }\n  }]);\n\n  return PromiseProxyIterator;\n}(asynciterator_1.TransformIterator);\n\nexports.PromiseProxyIterator = PromiseProxyIterator;","map":null,"metadata":{},"sourceType":"script"}