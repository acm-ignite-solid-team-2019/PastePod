{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_context_preprocess_1 = require(\"@comunica/bus-context-preprocess\");\n\nvar bus_rdf_resolve_quad_pattern_1 = require(\"@comunica/bus-rdf-resolve-quad-pattern\");\n\nvar asyncreiterable_1 = require(\"asyncreiterable\");\n/**\n * A comunica RDF Source Identifier Context Preprocess Actor.\n */\n\n\nvar ActorContextPreprocessRdfSourceIdentifier =\n/*#__PURE__*/\nfunction (_bus_context_preproce) {\n  _inherits(ActorContextPreprocessRdfSourceIdentifier, _bus_context_preproce);\n\n  function ActorContextPreprocessRdfSourceIdentifier(args) {\n    _classCallCheck(this, ActorContextPreprocessRdfSourceIdentifier);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorContextPreprocessRdfSourceIdentifier).call(this, args));\n  }\n\n  _createClass(ActorContextPreprocessRdfSourceIdentifier, [{\n    key: \"test\",\n    value: function () {\n      var _test = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", true);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function test(_x) {\n        return _test.apply(this, arguments);\n      }\n\n      return test;\n    }()\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(action) {\n        var _this = this;\n\n        var source, context, subContext, endSource, sources, newSources, identificationPromises, remainingSources, it;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!action.context) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                if (!action.context.get(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCE)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                source = action.context.get(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCE);\n                context = action.context;\n\n                if (!(source.type === 'auto')) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                context = action.context.delete(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCE);\n                _context2.next = 8;\n                return this.identifySource(source, context);\n\n              case 8:\n                source = _context2.sent;\n                context = context.set(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCE, source);\n\n              case 10:\n                return _context2.abrupt(\"return\", {\n                  context: context\n                });\n\n              case 13:\n                if (!action.context.get(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCES)) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                subContext = action.context.delete(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCES);\n\n                endSource = function endSource() {\n                  if (--remainingSources === 0) {\n                    newSources.push(null);\n                  }\n                };\n\n                sources = action.context.get(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCES);\n                newSources = asyncreiterable_1.AsyncReiterableArray.fromInitialEmpty();\n                identificationPromises = [];\n                remainingSources = 1;\n                it = sources.iterator();\n                it.on('data', function (source) {\n                  remainingSources++;\n\n                  if (source.type === 'auto') {\n                    identificationPromises.push(_this.identifySource(source, subContext).then(function (identifiedSource) {\n                      newSources.push(identifiedSource);\n                      endSource();\n                    }));\n                  } else {\n                    newSources.push(source);\n                    endSource();\n                  }\n                });\n                it.on('end', function () {\n                  endSource();\n                }); // If the sources are fixed, block until all sources are transformed.\n\n                if (!sources.isEnded()) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                _context2.next = 26;\n                return new Promise(function (resolve) {\n                  return it.on('end', resolve);\n                });\n\n              case 26:\n                _context2.next = 28;\n                return Promise.all(identificationPromises);\n\n              case 28:\n                return _context2.abrupt(\"return\", {\n                  context: action.context.set(bus_rdf_resolve_quad_pattern_1.KEY_CONTEXT_SOURCES, newSources)\n                });\n\n              case 29:\n                return _context2.abrupt(\"return\", action);\n\n              case 30:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function run(_x2) {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }, {\n    key: \"identifySource\",\n    value: function () {\n      var _identifySource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(source, context) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.mediatorRdfSourceIdentifier.mediate({\n                  sourceValue: source.value,\n                  context: context\n                }).then(function (sourceIdentificationResult) {\n                  if (sourceIdentificationResult.sourceType) {\n                    source.type = sourceIdentificationResult.sourceType;\n                  }\n\n                  return source;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function identifySource(_x3, _x4) {\n        return _identifySource.apply(this, arguments);\n      }\n\n      return identifySource;\n    }()\n  }]);\n\n  return ActorContextPreprocessRdfSourceIdentifier;\n}(bus_context_preprocess_1.ActorContextPreprocess);\n\nexports.ActorContextPreprocessRdfSourceIdentifier = ActorContextPreprocessRdfSourceIdentifier;","map":null,"metadata":{},"sourceType":"script"}