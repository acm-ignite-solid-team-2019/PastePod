{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n * Returns a function that deletes the given value\n * for the path, and then adds the given values to the path.\n *\n * Requires:\n * - a delete function on the path proxy.\n * - an add function on the path proxy.\n */\n\nvar ReplaceFunctionHandler =\n/*#__PURE__*/\nfunction () {\n  function ReplaceFunctionHandler() {\n    _classCallCheck(this, ReplaceFunctionHandler);\n  }\n\n  _createClass(ReplaceFunctionHandler, [{\n    key: \"handle\",\n    value: function handle(pathData, path) {\n      return function (oldValue) {\n        var _path$delete;\n\n        for (var _len = arguments.length, newValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          newValues[_key - 1] = arguments[_key];\n        }\n\n        if (!oldValue || !newValues.length) throw new Error('Replacing values requires at least two arguments, old value followed by all new values');\n        return (_path$delete = path.delete(oldValue)).add.apply(_path$delete, newValues);\n      };\n    }\n  }]);\n\n  return ReplaceFunctionHandler;\n}();\n\nexports.default = ReplaceFunctionHandler;","map":null,"metadata":{},"sourceType":"script"}