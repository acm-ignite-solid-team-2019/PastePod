{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actor_abstract_path_1 = require(\"@comunica/actor-abstract-path\");\n\nvar bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n\nvar rdf_string_1 = require(\"rdf-string\");\n\nvar sparqlalgebrajs_1 = require(\"sparqlalgebrajs\");\n/**\n * A comunica Path ZeroOrMore Query Operation Actor.\n */\n\n\nvar ActorQueryOperationPathZeroOrMore =\n/*#__PURE__*/\nfunction (_actor_abstract_path_) {\n  _inherits(ActorQueryOperationPathZeroOrMore, _actor_abstract_path_);\n\n  function ActorQueryOperationPathZeroOrMore(args) {\n    _classCallCheck(this, ActorQueryOperationPathZeroOrMore);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorQueryOperationPathZeroOrMore).call(this, args, sparqlalgebrajs_1.Algebra.types.ZERO_OR_MORE_PATH));\n  }\n\n  _createClass(ActorQueryOperationPathZeroOrMore, [{\n    key: \"runOperation\",\n    value: function () {\n      var _runOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(path, context) {\n        var predicate, sVar, oVar, bindingsStream, v, pred, _bindingsStream;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                predicate = path.predicate;\n                sVar = path.subject.termType === 'Variable';\n                oVar = path.object.termType === 'Variable';\n\n                if (!(sVar && oVar)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error('ZeroOrMore path expressions with 2 variables not supported yet');\n\n              case 7:\n                if (!(!sVar && !oVar)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.ALPeval(path.subject, predicate.path, context);\n\n              case 10:\n                _context.t0 = {\n                  filter: function filter(item) {\n                    return item.equals(path.object);\n                  },\n                  transform: function transform(item, next) {\n                    bindingsStream._push(bus_query_operation_1.Bindings({}));\n\n                    next(null);\n                  }\n                };\n                bindingsStream = _context.sent.transform(_context.t0);\n                return _context.abrupt(\"return\", {\n                  type: 'bindings',\n                  bindingsStream: bindingsStream,\n                  variables: []\n                });\n\n              case 15:\n                // if (sVar || oVar)\n                v = rdf_string_1.termToString(sVar ? path.subject : path.object);\n                pred = sVar ? actor_abstract_path_1.ActorAbstractPath.FACTORY.createInv(predicate.path) : predicate.path;\n                _context.next = 19;\n                return this.ALPeval(sVar ? path.object : path.subject, pred, context);\n\n              case 19:\n                _context.t1 = {\n                  transform: function transform(item, next) {\n                    _bindingsStream._push(bus_query_operation_1.Bindings(_defineProperty({}, v, item)));\n\n                    next(null);\n                  }\n                };\n                _bindingsStream = _context.sent.transform(_context.t1);\n                return _context.abrupt(\"return\", {\n                  type: 'bindings',\n                  bindingsStream: _bindingsStream,\n                  variables: [v]\n                });\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function runOperation(_x, _x2) {\n        return _runOperation.apply(this, arguments);\n      }\n\n      return runOperation;\n    }()\n  }]);\n\n  return ActorQueryOperationPathZeroOrMore;\n}(actor_abstract_path_1.ActorAbstractPath);\n\nexports.ActorQueryOperationPathZeroOrMore = ActorQueryOperationPathZeroOrMore;","map":null,"metadata":{},"sourceType":"script"}