{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n\nvar bus_rdf_join_1 = require(\"@comunica/bus-rdf-join\");\n\nvar sparqlee_1 = require(\"sparqlee\");\n/**\n * A comunica LeftJoin NestedLoop Query Operation Actor.\n */\n\n\nvar ActorQueryOperationLeftJoinNestedLoop =\n/*#__PURE__*/\nfunction (_bus_query_operation_) {\n  _inherits(ActorQueryOperationLeftJoinNestedLoop, _bus_query_operation_);\n\n  function ActorQueryOperationLeftJoinNestedLoop(args) {\n    _classCallCheck(this, ActorQueryOperationLeftJoinNestedLoop);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorQueryOperationLeftJoinNestedLoop).call(this, args, 'leftjoin'));\n  }\n\n  _createClass(ActorQueryOperationLeftJoinNestedLoop, [{\n    key: \"testOperation\",\n    value: function () {\n      var _testOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pattern, context) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", !pattern.expression);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function testOperation(_x, _x2) {\n        return _testOperation.apply(this, arguments);\n      }\n\n      return testOperation;\n    }()\n  }, {\n    key: \"runOperation\",\n    value: function () {\n      var _runOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(pattern, context) {\n        var leftRaw, left, rightRaw, right, evaluator, leftJoinInner, leftJoinOuter, transform, bindingsStream, variables, metadata;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.mediatorQueryOperation.mediate({\n                  operation: pattern.left,\n                  context: context\n                });\n\n              case 2:\n                leftRaw = _context4.sent;\n                left = bus_query_operation_1.ActorQueryOperation.getSafeBindings(leftRaw);\n                _context4.next = 6;\n                return this.mediatorQueryOperation.mediate({\n                  operation: pattern.right,\n                  context: context\n                });\n\n              case 6:\n                rightRaw = _context4.sent;\n                right = bus_query_operation_1.ActorQueryOperation.getSafeBindings(rightRaw);\n                evaluator = pattern.expression ? new sparqlee_1.AsyncEvaluator(pattern.expression) : null;\n\n                leftJoinInner = function leftJoinInner(outerItem, innerStream) {\n                  var joinedStream = innerStream.transform({\n                    transform: function () {\n                      var _transform = _asyncToGenerator(\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee2(innerItem, nextInner) {\n                        var joinedBindings, result;\n                        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                          while (1) {\n                            switch (_context2.prev = _context2.next) {\n                              case 0:\n                                joinedBindings = bus_rdf_join_1.ActorRdfJoin.join(outerItem, innerItem);\n\n                                if (joinedBindings) {\n                                  _context2.next = 4;\n                                  break;\n                                }\n\n                                nextInner();\n                                return _context2.abrupt(\"return\");\n\n                              case 4:\n                                if (pattern.expression) {\n                                  _context2.next = 8;\n                                  break;\n                                }\n\n                                joinedStream._push({\n                                  joinedBindings: joinedBindings,\n                                  result: true\n                                });\n\n                                nextInner();\n                                return _context2.abrupt(\"return\");\n\n                              case 8:\n                                _context2.prev = 8;\n                                _context2.next = 11;\n                                return evaluator.evaluateAsEBV(joinedBindings);\n\n                              case 11:\n                                result = _context2.sent;\n\n                                joinedStream._push({\n                                  joinedBindings: joinedBindings,\n                                  result: result\n                                });\n\n                                _context2.next = 18;\n                                break;\n\n                              case 15:\n                                _context2.prev = 15;\n                                _context2.t0 = _context2[\"catch\"](8);\n\n                                if (!sparqlee_1.isExpressionError(_context2.t0)) {\n                                  bindingsStream.emit('error', _context2.t0);\n                                }\n\n                              case 18:\n                                nextInner();\n\n                              case 19:\n                              case \"end\":\n                                return _context2.stop();\n                            }\n                          }\n                        }, _callee2, this, [[8, 15]]);\n                      }));\n\n                      function transform(_x5, _x6) {\n                        return _transform.apply(this, arguments);\n                      }\n\n                      return transform;\n                    }()\n                  });\n                  return joinedStream;\n                };\n\n                leftJoinOuter = function leftJoinOuter(leftItem, nextLeft) {\n                  var innerStream = right.bindingsStream.clone();\n                  var joinedStream = leftJoinInner(leftItem, innerStream); // TODO: This will not work for larger streams.\n                  // The full inner stream is kept in memory.\n\n                  joinedStream.on('end', function () {\n                    return nextLeft();\n                  });\n                  joinedStream.on('data',\n                  /*#__PURE__*/\n                  function () {\n                    var _ref2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee3(_ref) {\n                      var joinedBindings, result;\n                      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              joinedBindings = _ref.joinedBindings, result = _ref.result;\n\n                              if (result) {\n                                bindingsStream._push(joinedBindings);\n                              }\n\n                            case 2:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3, this);\n                    }));\n\n                    return function (_x7) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }());\n                };\n\n                transform = leftJoinOuter;\n                bindingsStream = left.bindingsStream.transform({\n                  optional: true,\n                  transform: transform\n                });\n                variables = bus_rdf_join_1.ActorRdfJoin.joinVariables({\n                  entries: [left, right]\n                });\n\n                metadata = function metadata() {\n                  return Promise.all([pattern.left, pattern.right].map(function (entry) {\n                    return entry.metadata;\n                  })).then(function (metadatas) {\n                    return metadatas.reduce(function (acc, val) {\n                      return acc * val.totalItems;\n                    }, 1);\n                  }).catch(function () {\n                    return Infinity;\n                  }).then(function (totalItems) {\n                    return {\n                      totalItems: totalItems\n                    };\n                  });\n                };\n\n                return _context4.abrupt(\"return\", {\n                  type: 'bindings',\n                  bindingsStream: bindingsStream,\n                  metadata: metadata,\n                  variables: variables\n                });\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function runOperation(_x3, _x4) {\n        return _runOperation.apply(this, arguments);\n      }\n\n      return runOperation;\n    }()\n  }]);\n\n  return ActorQueryOperationLeftJoinNestedLoop;\n}(bus_query_operation_1.ActorQueryOperationTypedMediated);\n\nexports.ActorQueryOperationLeftJoinNestedLoop = ActorQueryOperationLeftJoinNestedLoop;","map":null,"metadata":{},"sourceType":"script"}