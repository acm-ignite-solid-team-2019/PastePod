{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_sparql_parse_1 = require(\"@comunica/bus-sparql-parse\");\n\nvar graphql_to_sparql_1 = require(\"graphql-to-sparql\");\n/**\n * A comunica GraphQL SPARQL Parse Actor.\n */\n\n\nvar ActorSparqlParseGraphql =\n/*#__PURE__*/\nfunction (_bus_sparql_parse_1$A) {\n  _inherits(ActorSparqlParseGraphql, _bus_sparql_parse_1$A);\n\n  function ActorSparqlParseGraphql(args) {\n    var _this;\n\n    _classCallCheck(this, ActorSparqlParseGraphql);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActorSparqlParseGraphql).call(this, args));\n    _this.graphqlToSparql = new graphql_to_sparql_1.Converter({\n      requireContext: true\n    });\n    return _this;\n  }\n\n  _createClass(ActorSparqlParseGraphql, [{\n    key: \"test\",\n    value: function () {\n      var _test = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(action.queryFormat !== 'graphql')) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('This actor can only parse GraphQL queries');\n\n              case 2:\n                return _context.abrupt(\"return\", true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function test(_x) {\n        return _test.apply(this, arguments);\n      }\n\n      return test;\n    }()\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(action) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", {\n                  operation: this.graphqlToSparql.graphqlToSparqlAlgebra(action.query, action.context && action.context.has('@context') ? action.context.get('@context') : {})\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function run(_x2) {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return ActorSparqlParseGraphql;\n}(bus_sparql_parse_1.ActorSparqlParse);\n\nexports.ActorSparqlParseGraphql = ActorSparqlParseGraphql;","map":null,"metadata":{},"sourceType":"script"}