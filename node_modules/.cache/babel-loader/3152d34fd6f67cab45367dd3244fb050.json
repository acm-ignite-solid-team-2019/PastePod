{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream_1 = require(\"stream\");\n\nvar ActorRdfMetadata_1 = require(\"./ActorRdfMetadata\");\n/**\n * An abstract implementation of {@link ActorRdfMetadata} that\n * only requires the quad test {@link ActorRdfMetadata#isMetadata} method to be overridden.\n */\n\n\nvar ActorRdfMetadataQuadPredicate =\n/*#__PURE__*/\nfunction (_ActorRdfMetadata_1$A) {\n  _inherits(ActorRdfMetadataQuadPredicate, _ActorRdfMetadata_1$A);\n\n  function ActorRdfMetadataQuadPredicate(args) {\n    _classCallCheck(this, ActorRdfMetadataQuadPredicate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorRdfMetadataQuadPredicate).call(this, args));\n  }\n\n  _createClass(ActorRdfMetadataQuadPredicate, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        var _this = this;\n\n        var data, metadata, attachListeners;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = new stream_1.Readable({\n                  objectMode: true\n                });\n                metadata = new stream_1.Readable({\n                  objectMode: true\n                }); // Delay attachment of listeners until the data or metadata stream is being read.\n\n                attachListeners = function attachListeners() {\n                  // Attach listeners only once\n                  data._read = metadata._read = function () {\n                    return;\n                  }; // Forward errors\n\n\n                  action.quads.on('error', function (error) {\n                    data.emit('error', error);\n                    metadata.emit('error', error);\n                  });\n                  var context = {};\n                  action.quads.on('data', function (quad) {\n                    if (_this.isMetadata(quad, action.pageUrl, context)) {\n                      metadata.push(quad);\n                    } else {\n                      data.push(quad);\n                    }\n                  });\n                  action.quads.on('end', function () {\n                    data.push(null);\n                    metadata.push(null);\n                  });\n                };\n\n                data._read = metadata._read = function () {\n                  attachListeners();\n                };\n\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  metadata: metadata\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run(_x) {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return ActorRdfMetadataQuadPredicate;\n}(ActorRdfMetadata_1.ActorRdfMetadata);\n\nexports.ActorRdfMetadataQuadPredicate = ActorRdfMetadataQuadPredicate;","map":null,"metadata":{},"sourceType":"script"}