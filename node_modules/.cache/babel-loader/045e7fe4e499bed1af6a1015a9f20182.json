{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_rdf_resolve_quad_pattern_1 = require(\"@comunica/bus-rdf-resolve-quad-pattern\");\n/**\n * A comunica RDFJS Source RDF Resolve Quad Pattern Actor.\n */\n\n\nvar ActorRdfResolveQuadPatternRdfJsSource =\n/*#__PURE__*/\nfunction (_bus_rdf_resolve_quad) {\n  _inherits(ActorRdfResolveQuadPatternRdfJsSource, _bus_rdf_resolve_quad);\n\n  function ActorRdfResolveQuadPatternRdfJsSource(args) {\n    _classCallCheck(this, ActorRdfResolveQuadPatternRdfJsSource);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorRdfResolveQuadPatternRdfJsSource).call(this, args));\n  }\n\n  _createClass(ActorRdfResolveQuadPatternRdfJsSource, [{\n    key: \"test\",\n    value: function () {\n      var _test = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.hasContextSingleSource('rdfjsSource', action.context)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error(this.name + ' requires a single source with an rdfjsSource to be present in the context.');\n\n              case 2:\n                if (this.getContextSource(action.context).value.match) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error(this.name + ' received an invalid rdfjsSource.');\n\n              case 4:\n                return _context.abrupt(\"return\", true);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function test(_x) {\n        return _test.apply(this, arguments);\n      }\n\n      return test;\n    }()\n  }, {\n    key: \"getSource\",\n    value: function () {\n      var _getSource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(context) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.getContextSource(context).value);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getSource(_x2) {\n        return _getSource.apply(this, arguments);\n      }\n\n      return getSource;\n    }()\n  }]);\n\n  return ActorRdfResolveQuadPatternRdfJsSource;\n}(bus_rdf_resolve_quad_pattern_1.ActorRdfResolveQuadPatternSource);\n\nexports.ActorRdfResolveQuadPatternRdfJsSource = ActorRdfResolveQuadPatternRdfJsSource;","map":null,"metadata":{},"sourceType":"script"}