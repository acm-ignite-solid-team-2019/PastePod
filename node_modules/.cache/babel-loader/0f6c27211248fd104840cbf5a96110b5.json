{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n * Yields a function that interprets a string expression as an LDflex path.\n */\n\nvar StringToLDflexHandler =\n/*#__PURE__*/\nfunction () {\n  function StringToLDflexHandler() {\n    _classCallCheck(this, StringToLDflexHandler);\n  }\n\n  _createClass(StringToLDflexHandler, [{\n    key: \"handle\",\n    value: function handle(pathData, path) {\n      // Resolves the given string expression against the LDflex object\n      return function () {\n        var expression = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var ldflex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : path;\n        // An expression starts with a property access in dot or bracket notation\n        var propertyPath = expression // Add the starting dot if omitted\n        .replace(/^(?=[a-z$_])/i, '.') // Add quotes inside of brackets if omitted\n        .replace(/\\[([^'\"`\\](]*)\\]/g, '[\"$1\"]'); // Create a function to evaluate the expression\n\n        var body = \"\\\"use strict\\\";return ldflex\".concat(propertyPath);\n        var evaluator;\n\n        try {\n          /* eslint no-new-func: off */\n          evaluator = Function('ldflex', body);\n        } catch (_ref) {\n          var message = _ref.message;\n          throw new Error(\"Expression \\\"\".concat(expression, \"\\\" is invalid: \").concat(message));\n        } // Evaluate the function\n\n\n        return evaluator(ldflex);\n      };\n    }\n  }]);\n\n  return StringToLDflexHandler;\n}();\n\nexports.default = StringToLDflexHandler;","map":null,"metadata":{},"sourceType":"script"}