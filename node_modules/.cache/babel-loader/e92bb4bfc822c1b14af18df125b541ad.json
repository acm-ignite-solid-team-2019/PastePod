{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/evan/Documents/Solid/solid-app/solid-ignite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n\nvar sparqlee_1 = require(\"sparqlee\");\n/**\n * A comunica Filter Sparqlee Query Operation Actor.\n */\n\n\nvar ActorQueryOperationFilterSparqlee =\n/*#__PURE__*/\nfunction (_bus_query_operation_) {\n  _inherits(ActorQueryOperationFilterSparqlee, _bus_query_operation_);\n\n  function ActorQueryOperationFilterSparqlee(args) {\n    _classCallCheck(this, ActorQueryOperationFilterSparqlee);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActorQueryOperationFilterSparqlee).call(this, args, 'filter'));\n  }\n\n  _createClass(ActorQueryOperationFilterSparqlee, [{\n    key: \"testOperation\",\n    value: function () {\n      var _testOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pattern, context) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", pattern.type === 'filter' && !!new sparqlee_1.AsyncEvaluator(pattern.expression));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function testOperation(_x, _x2) {\n        return _testOperation.apply(this, arguments);\n      }\n\n      return testOperation;\n    }()\n  }, {\n    key: \"runOperation\",\n    value: function () {\n      var _runOperation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(pattern, context) {\n        var outputRaw, output, variables, metadata, evaluator, transform, bindingsStream;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.mediatorQueryOperation.mediate({\n                  operation: pattern.input,\n                  context: context\n                });\n\n              case 2:\n                outputRaw = _context3.sent;\n                output = bus_query_operation_1.ActorQueryOperation.getSafeBindings(outputRaw);\n                bus_query_operation_1.ActorQueryOperation.validateQueryOutput(output, 'bindings');\n                variables = output.variables, metadata = output.metadata;\n                evaluator = new sparqlee_1.AsyncEvaluator(pattern.expression);\n\n                transform =\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2(item, next) {\n                    var result;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.prev = 0;\n                            _context2.next = 3;\n                            return evaluator.evaluateAsEBV(item);\n\n                          case 3:\n                            result = _context2.sent;\n\n                            if (result) {\n                              bindingsStream._push(item);\n                            }\n\n                            _context2.next = 10;\n                            break;\n\n                          case 7:\n                            _context2.prev = 7;\n                            _context2.t0 = _context2[\"catch\"](0);\n\n                            if (!sparqlee_1.isExpressionError(_context2.t0)) {\n                              bindingsStream.emit('error', _context2.t0);\n                            }\n\n                          case 10:\n                            next();\n\n                          case 11:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this, [[0, 7]]);\n                  }));\n\n                  return function transform(_x5, _x6) {\n                    return _ref.apply(this, arguments);\n                  };\n                }();\n\n                bindingsStream = output.bindingsStream.transform({\n                  transform: transform\n                });\n                return _context3.abrupt(\"return\", {\n                  type: 'bindings',\n                  bindingsStream: bindingsStream,\n                  metadata: metadata,\n                  variables: variables\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function runOperation(_x3, _x4) {\n        return _runOperation.apply(this, arguments);\n      }\n\n      return runOperation;\n    }()\n  }]);\n\n  return ActorQueryOperationFilterSparqlee;\n}(bus_query_operation_1.ActorQueryOperationTypedMediated);\n\nexports.ActorQueryOperationFilterSparqlee = ActorQueryOperationFilterSparqlee;","map":null,"metadata":{},"sourceType":"script"}